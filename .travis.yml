language: cpp

stages:
  - build_base
  - build_env
  - master_beta_docker
  - tag_test
  - test
  - artifacts_beta
  - artifacts_live
jobs:
  include:
    - stage: build_base
      name: "base"
      if: branch=master AND type=push
      script:
        - if [ -n "$DOCKER_PASSWORD" ]; then ci/deploy-docker.sh; fi;
    - stage: build_env
      name: "clang"
      if: branch=master AND type=push
      script: 
        - if [ -n "$DOCKER_PASSWORD" ]; then ci/deploy-docker.sh; fi;
    - name: "gcc"
      if: branch=master AND type=push
      script: 
        - if [ -n "$DOCKER_PASSWORD" ]; then ci/deploy-docker.sh; fi;
    - stage: master_beta_docker
      name: "beta docker master tag"
      if: tag =~RC|DB
      script: 
        - if [ -n "$DOCKER_PASSWORD" ]; then TRAVIS_TAG="${TRAVIS_TAG}" ci/deploy-docker.sh; fi;

    - stage: tag_test
      name: "gcc"
      if: tag is present
      os: linux
      compiler: gcc
      env:
        - RELEASE=1
      before_install:
        - sudo mkdir -p /etc/docker && echo '{"ipv6":true,"fixed-cidr-v6":"2001:db8:1::/64"}' | sudo tee /etc/docker/daemon.json && sudo service docker restart;
        - ci/build-docker-image.sh docker/ci/Dockerfile-gcc nanocurrency/nano-env:gcc; 
    - name: "clang"
      if: tag is present
      os: linux
      compiler: clang
      env:
        - RELEASE=1
      before_install:
        - sudo mkdir -p /etc/docker && echo '{"ipv6":true,"fixed-cidr-v6":"2001:db8:1::/64"}' | sudo tee /etc/docker/daemon.json && sudo service docker restart;
        - ci/build-docker-image.sh docker/ci/Dockerfile-clang nanocurrency/nano-env:clang;
    - name: "osx clang"
      if: tag is present
      os: osx
      compiler: clang
      env:
        - RELEASE=1
      before_install:
        - brew update;
        - brew cask install xquartz;
        - brew upgrade cmake;
        - brew install rocksdb;
        - util/build_prep/fetch_boost.sh
        - util/build_prep/macosx/build_qt.sh
      install:
        - brew install ccache;
        - export PATH="/usr/local/opt/ccache/libexec:$PATH";

    - stage: test
      name: "GCC + ONE_TIME_TESTS"      
      os: linux
      compiler: gcc
      dist: trusty
      sudo: required
      env: 
        - ONE_TIME_TESTS=true
      addons:
        apt:
          packages:
            - doxygen
      before_install:
        - sudo mkdir -p /etc/docker && echo '{"ipv6":true,"fixed-cidr-v6":"2001:db8:1::/64"}' | sudo tee /etc/docker/daemon.json && sudo service docker restart;
        - ci/build-docker-image.sh docker/ci/Dockerfile-gcc nanocurrency/nano-env:gcc;
    - name: "clang"
      os: linux
      compiler: clang
      dist: trusty
      sudo: required
      before_install:
        - sudo mkdir -p /etc/docker && echo '{"ipv6":true,"fixed-cidr-v6":"2001:db8:1::/64"}' | sudo tee /etc/docker/daemon.json && sudo service docker restart;
        - ci/build-docker-image.sh docker/ci/Dockerfile-clang nanocurrency/nano-env:clang;
    - name: "osx"
      os: osx
      compiler: clang
      before_install:
        - brew update;
        - brew cask install xquartz;
        - brew upgrade cmake;
        - brew install rocksdb;
        - util/build_prep/fetch_boost.sh
        - util/build_prep/macosx/build_qt.sh
      install:
        - brew install ccache;
        - export PATH="/usr/local/opt/ccache/libexec:$PATH";

    - stage: artifacts_live
      name: "live docker"
      if: tag IS present AND !tag=~RC|DB
      script: 
        if [ -n "$DOCKER_PASSWORD" ]; then TRAVIS_TAG="${TRAVIS_TAG}" ci/deploy-docker.sh; fi;
    - name: "live linux"
      os: linux
      compiler: gcc
      dist: trusty
      if: tag IS present AND !tag=~RC|DB
      before_install:
        - sudo apt-get update -y && sudo apt-get install -y python-pip
        - pip install --user awscli
        - aws --version
        - sudo mkdir -p /etc/docker && echo '{"ipv6":true,"fixed-cidr-v6":"2001:db8:1::/64"}' | sudo tee /etc/docker/daemon.json && sudo service docker restart;
        - ci/build-docker-image.sh docker/ci/Dockerfile-gcc nanocurrency/nano-env:gcc;
      script:
        - docker run -v $TRAVIS_BUILD_DIR:/workspace -v $HOME/.ccache:/ccache nanocurrency/nano-env:$TRAVIS_COMPILER /bin/bash -c "apt install ccache; cd /workspace && TRAVIS_TAG=${TRAVIS_TAG} CCACHE_DIR=/ccache ci/build-deploy.sh /usr/lib/x86_64-linux-gnu/cmake/Qt5 ${PWD}";
        - ci/deploy-travis.sh;
    - name: "live osx"
      os: osx
      compiler: clang
      before_install:
        - brew update;
        - brew cask install xquartz;
        - brew upgrade cmake;
        - util/build_prep/fetch_rocksdb.sh
        - util/build_prep/fetch_boost.sh
        - util/build_prep/macosx/build_qt.sh
      install:
        - pip install --user awscli
        - brew install ccache;
        - export PATH="$HOME/Library/Python/2.7/bin:/usr/local/opt/ccache/libexec:$PATH";
        - aws --version
      script:
        - ci/build-deploy.sh "/tmp/qt/lib/cmake/Qt5"; 
        - if [[ -n "$TRAVIS_TAG" ]]; then if [[ ! "${TRAVIS_TAG-0}" =~ ("RC"|"DB") ]]; then ci/deploy-travis.sh; fi; fi;

    - stage: artifacts_beta
      name: "beta docker"
      if: tag =~RC|DB
      script: 
        - if [ -n "$DOCKER_PASSWORD" ]; then TRAVIS_TAG="${TRAVIS_TAG}" ci/deploy-docker.sh; fi;
    - name: "beta linux"
      os: linux
      env:
        - BETA=1
      compiler: gcc
      dist: trusty
      if: tag =~RC|DB
      before_install:
        - sudo apt-get update -y && sudo apt-get install -y python-pip
        - pip install --user awscli
        - aws --version
        - sudo mkdir -p /etc/docker && echo '{"ipv6":true,"fixed-cidr-v6":"2001:db8:1::/64"}' | sudo tee /etc/docker/daemon.json && sudo service docker restart;
        - ci/build-docker-image.sh docker/ci/Dockerfile-gcc nanocurrency/nano-env:gcc;
      script:
        - docker run -v $TRAVIS_BUILD_DIR:/workspace -v $HOME/.ccache:/ccache nanocurrency/nano-env:$TRAVIS_COMPILER /bin/bash -c "apt install ccache; cd /workspace && TRAVIS_TAG=${TRAVIS_TAG} BETA=1 CCACHE_DIR=/ccache ci/build-deploy.sh /usr/lib/x86_64-linux-gnu/cmake/Qt5 ${PWD}"
        - ci/deploy-travis.sh;
    - name: "beta osx"
      os: osx
      compiler: clang
      env:
        - BETA=1
      if: tag =~RC|DB
      before_install:
        - brew update;
        - brew cask install xquartz;
        - brew upgrade cmake;
        - util/build_prep/fetch_rocksdb.sh
        - util/build_prep/fetch_boost.sh
        - util/build_prep/macosx/build_qt.sh
      install:
        - pip install --user awscli
        - brew install ccache;
        - export PATH="$HOME/Library/Python/2.7/bin:/usr/local/opt/ccache/libexec:$PATH";
        - aws --version
      script:
        - ci/build-deploy.sh "/tmp/qt/lib/cmake/Qt5"; 
        - ci/deploy-travis.sh;
cache:
  - ccache: true
  - directories:
    - $HOME/.local
    - $HOME/Library/Caches/Homebrew
    - $TRAVIS_BUILD_DIR/load-tester/target
script:
  - if [ -n "$ONE_TIME_TESTS" ]; then ci/check-commit-format.sh; fi
  - if [ -n "$ONE_TIME_TESTS" ]; then doxygen doxygen.config; fi # TODO also deploy the built HTML
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then RELEASE=${RELEASE} ci/build-travis.sh "/tmp/qt/lib/cmake/Qt5"; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then docker run -v $TRAVIS_BUILD_DIR:/workspace -v $HOME/.ccache:/ccache nanocurrency/nano-env:$TRAVIS_COMPILER /bin/bash -c "apt install ccache; cd /workspace && RELEASE=${RELEASE} ASAN=${ASAN} TSAN=${TSAN} CCACHE_DIR=/ccache ./ci/build-travis.sh /usr/lib/x86_64-linux-gnu/cmake/Qt5 ${PWD}"; fi
env:
  global:
    - secure: "k8kmpD+xRS57ukdvlvaXT0WN4H0rr/aHSjV+l5IUUFpKx5N+DEsb+7ElIepKzqQrGG6qE71cFwDyn6rDwW/Objb9aiEITnvJBzk1XrOVgbc5AnlqDm8LKvqToD/VnQiojyXhBQe2wa//nEZ3PC9dv7hE5zb/K/U5z+LaE9T1cPPk1jHQMCUAFT7QGCK0YeX/gAZqPbLZdHHQChEi+Gu/XY0gc5Bl8Idbp8W7Aky9Ps06lKXPORkE1G2xQfJFrNPB3CKjxev/eoXGBJmNYzxkJlUHmyenjwgdDh9TWiOK2uKH1K6olLIx/qFuIgFRVJFv0QFzCjqqjOJJF1EN9i1M21Lm4wi1iJxYShAP86ZKkC/WmtRn1xNTEMHZJeZ3TXX+B3ybLEWTamHS1Ia8HOif18nrQE3O0aRC/NNfH1kewX+94UNxmSfHtL5Waa41shxeG5waemyQg+HR5zCEtrb5l1btgbfGrR8BMbHYLLe4ywJqMx3n8Iy6ZzC6Xx8+X1zTZZ3zDYPBHUalA+ZoYu2rrFG2+SARP0W/VKqCIKaB+lQKYpbv7ojXGrrDJe7MA/raTLL2pTfSkcx0qxJvcsbPLGI1MdG3mD7M8HncrZbw+sKI1LZ04gyWt3til6d3vSlbIkd6kCxxZh69nd1/KJy8rYrMYjqxxNSTctkGyVb2DtY=" 
    - RELEASE=0
    - AWS_BUCKET=repo.nano.org
